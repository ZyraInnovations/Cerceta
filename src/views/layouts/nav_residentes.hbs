<!DOCTYPE html>
<html lang="es" class="light">
<head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport"/>
  <title>CERCETA Mobile</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet"/>
  <link rel="manifest" href="/manifest.json">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet"/>
  <style>
    :root {
      --primary-color: #2b6cb0;
      --accent-color: #4299e1;
      --text-color: #2d3748;
    }
    
    body {
      font-family: 'Poppins', sans-serif;
      color: var(--text-color);
      background-color: #f8fafc;
      -webkit-tap-highlight-color: transparent;
    }
    
    /* Mobile-first sidebar */
    .sidebar {
      width: 280px;
      height: 100vh;
      position: fixed;
      top: 0;
      left: -280px;
      background: linear-gradient(180deg, var(--primary-color) 0%, var(--accent-color) 100%);
      transition: transform 0.3s ease;
      z-index: 100;
      overflow-y: auto;
      padding: 1rem;
      box-shadow: 4px 0 15px rgba(0, 0, 0, 0.1);
    }
    
    .sidebar.open {
      transform: translateX(280px);
    }
    
    /* Profile section */
    .profile-section {
      text-align: center;
      padding: 1rem 0;
      border-bottom: 1px solid rgba(255, 255, 255, 0.2);
      margin-bottom: 1rem;
    }
    
    #perfil {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      border: 3px solid rgba(255, 255, 255, 0.3);
      margin: 0 auto;
    }
    
    .profile-name {
      color: white;
      font-weight: 600;
      margin-top: 0.5rem;
    }
    
    /* Navigation items */
    .nav-item {
      display: flex;
      align-items: center;
      padding: 0.8rem 1rem;
      color: white;
      border-radius: 8px;
      margin-bottom: 0.5rem;
    }
    
    .nav-item i {
      width: 24px;
      text-align: center;
      margin-right: 12px;
      font-size: 1rem;
    }
    
    .nav-item.active {
      background-color: rgba(255, 255, 255, 0.2);
    }
    
    .nav-item:hover {
      background-color: rgba(255, 255, 255, 0.15);
    }
    
    /* Submenu items */
    .submenu {
      margin-left: 2rem;
      border-left: 2px solid rgba(255, 255, 255, 0.1);
      padding-left: 0.5rem;
    }
    
    .submenu .nav-item {
      padding: 0.6rem 1rem;
      font-size: 0.9rem;
    }
    
    /* Mobile header */
    .mobile-header {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      height: 60px;
      background: linear-gradient(90deg, var(--primary-color) 0%, var(--accent-color) 100%);
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 0 1rem;
      z-index: 90;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }
    
    .menu-button {
      color: white;
      font-size: 1.5rem;
    }
    
    .app-title {
      color: white;
      font-weight: 600;
      font-size: 1.1rem;
    }
    
    .notification-bell {
      position: relative;
      color: white;
      font-size: 1.2rem;
    }
    
    .badge {
      position: absolute;
      top: -5px;
      right: -5px;
      background-color: #f56565;
      color: white;
      border-radius: 50%;
      width: 18px;
      height: 18px;
      font-size: 0.7rem;
      display: flex;
      align-items: center;
      justify-content: center;
    }
    
    /* Main content */
    .main-content {
      margin-top: 60px;
      padding: 1rem;
      min-height: calc(100vh - 60px);
    }
    
    /* Notification popup */
    #notificationPopup {
      position: fixed;
      top: 70px;
      right: 15px;
      width: 90%;
      max-width: 300px;
      background: white;
      border-radius: 10px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      z-index: 95;
      transform: translateY(-20px);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }
    
    #notificationPopup.show {
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }
    
    .notification-header {
      padding: 0.8rem 1rem;
      background: var(--primary-color);
      color: white;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      display: flex;
      justify-content: space-between;
    }
    
    #notificationList {
      max-height: 300px;
      overflow-y: auto;
    }
    
    .notification-item {
      padding: 0.8rem 1rem;
      border-bottom: 1px solid #eee;
    }
    
    .notification-item.unread {
      background-color: #f0f9ff;
    }
    
    .notification-time {
      font-size: 0.75rem;
      color: #718096;
      margin-top: 0.2rem;
    }
    
    /* Overlay */
    .overlay {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      z-index: 80;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
    }
    
    .overlay.active {
      opacity: 1;
      visibility: visible;
    }
    
    /* Theme toggle */
    .theme-toggle {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 0.8rem;
      background-color: rgba(255, 255, 255, 0.1);
      color: white;
      border-radius: 8px;
      margin-top: 1rem;
      border: none;
      width: 100%;
    }
    
    .theme-toggle i {
      margin-right: 0.5rem;
    }
    
    /* Dark mode */
    .dark body {
      background-color: #1a202c;
    }
    
    .dark .main-content {
      background-color: #1a202c;
      color: #e2e8f0;
    }
    
    /* Section titles */
    .section-title {
      color: rgba(255, 255, 255, 0.7);
      font-size: 0.75rem;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      margin: 1.5rem 0 0.5rem 1rem;
    }
    
    /* Responsive adjustments */
    @media (min-width: 768px) {
      .sidebar {
        left: 0;
        transform: translateX(0);
      }
      
      .main-content {
        margin-left: 280px;
        margin-top: 0;
      }
      
      .mobile-header {
        display: none;
      }
    }
    .profile-section {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.logo-container {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background-color: white; /* Círculo blanco */
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1); /* Sombra opcional */
  overflow: hidden; /* Para recortar el logo si se sale del círculo */
}

.logo-container img#perfil {
  width: 80%;
  height: auto;
}

  </style>
</head>
<body class="bg-gray-50 dark:bg-gray-900">
  <!-- Mobile Header -->
  <div class="mobile-header">
    <button class="menu-button" id="menuButton">
      <i class="fas fa-bars"></i>
    </button>
    <div class="app-title">CERCETA</div>
    <div class="notification-bell" id="notificationBell">
      <i class="fas fa-bell"></i>
      <span class="badge hidden" id="notificationCount">0</span>
    </div>
  </div>

  <!-- Overlay -->
  <div class="overlay" id="overlay"></div>

  <!-- Sidebar -->
  <div class="sidebar" id="sidebar">
<!-- Profile Section -->
<div class="profile-section">
  <div class="logo-container">
    <img id="perfil" src="imagenes/Recurso 1hdpi.png" alt="Logo CERCETA"/>
  </div>
  <div class="profile-info">
    <div class="profile-name">{{name}}</div>
    <div class="profile-role">Residente</div>
  </div>
</div>

    <!-- Navigation -->
    <nav>
      <div class="section-title">General</div>
      <a href="/menu_residentes" class="nav-item" data-link="/menu_residentes">
        <i class="fas fa-home"></i>
        <span>Blog residencial</span>
      </a>

      <div class="section-title">Contabilidad</div>
      <div class="nav-item" onclick="toggleSubmenu('pagosSubmenu')">
        <i class="fas fa-money-bill-wave"></i>
        <span>Pagos</span>
        <i class="fas fa-chevron-down ml-auto" style="font-size: 0.8rem;"></i>
      </div>
      
      <div class="submenu hidden" id="pagosSubmenu">
        <a href="/subir_pago_residentes" class="nav-item">
          <i class="fas fa-plus-circle"></i>
          <span>Subir pago</span>
        </a>
        <a href="/Consulta_Comprobantes_de_Pago_residentes" class="nav-item">
          <i class="fas fa-search-dollar"></i>
          <span>Consultar</span>
        </a>
      </div>
<div class="section-title">Servicios</div>

<!-- Domicilios -->
<a href="/mis-domicilios" class="nav-item" data-link="/domicilios">
  <i class="fas fa-motorcycle"></i>
  <span>Domicilios</span>
</a>

<!-- PQRs -->
<a href="/pqrs" class="nav-item" data-link="/pqrs">
  <i class="fas fa-envelope-open-text"></i>
  <span>PQRs</span>
</a>
<!-- PQRs -->
<a href="/autorizaciones" class="nav-item" data-link="/pqrs">
<i class="fas fa-key"></i> <!-- Representa acceso autorizado o permiso -->
  <span>Autorizaciones</span>
</a>

      <a href="/logout" class="nav-item">
        <i class="fas fa-sign-out-alt"></i>
        <span>Cerrar sesión</span>
      </a>
    </nav>

    <!-- Theme Toggle -->
    <button class="theme-toggle" id="themeToggle">
      <i class="fas fa-moon"></i>
      <span>Cambiar tema</span>
    </button>
  </div>

  <!-- Main Content -->
  <div class="main-content">
    <!-- Notification Popup -->
    <div id="notificationPopup">
      <div class="notification-header">
        <h3>Notificaciones</h3>
        <button onclick="markNotificationsAsRead({{userId}})">Marcar como leídas</button>
      </div>
      <ul id="notificationList">
        <li class="notification-item">No hay notificaciones</li>
      </ul>
    </div>

    <!-- Dynamic Content -->
    {{{body}}}
  </div>

  <script>
    // DOM Elements
    const menuButton = document.getElementById('menuButton');
    const sidebar = document.getElementById('sidebar');
    const overlay = document.getElementById('overlay');
    const notificationBell = document.getElementById('notificationBell');
    const notificationPopup = document.getElementById('notificationPopup');
    const themeToggle = document.getElementById('themeToggle');
    const html = document.documentElement;
    
    // Toggle sidebar
    menuButton.addEventListener('click', () => {
      sidebar.classList.toggle('open');
      overlay.classList.toggle('active');
    });
    
    // Close sidebar when clicking overlay
    overlay.addEventListener('click', () => {
      sidebar.classList.remove('open');
      overlay.classList.remove('active');
    });
    
    // Toggle notifications
    notificationBell.addEventListener('click', (e) => {
      e.stopPropagation();
      notificationPopup.classList.toggle('show');
    });
    
    // Close notifications when clicking outside
    document.addEventListener('click', (e) => {
      if (!notificationPopup.contains(e.target) && e.target !== notificationBell) {
        notificationPopup.classList.remove('show');
      }
    });
    
    // Theme toggle
    themeToggle.addEventListener('click', () => {
      html.classList.toggle('dark');
      localStorage.setItem('theme', html.classList.contains('dark') ? 'dark' : 'light');
    });
    
    // Load saved theme
    if (localStorage.getItem('theme') === 'dark') {
      html.classList.add('dark');
    }
    
    // Toggle submenus
    function toggleSubmenu(id) {
      const submenu = document.getElementById(id);
      const icon = submenu.previousElementSibling.querySelector('.fa-chevron-down');
      
      submenu.classList.toggle('hidden');
      icon.classList.toggle('fa-chevron-down');
      icon.classList.toggle('fa-chevron-up');
    }
    
    // Mark active link
    document.querySelectorAll('.nav-item').forEach(item => {
      if (item.getAttribute('href') === window.location.pathname) {
        item.classList.add('active');
      }
    });
    
    // Load notifications
    async function loadNotifications() {
      try {
        const response = await fetch('/notificaciones');
        const data = await response.json();
        
        const notifications = data.notificaciones || [];
        const notificationList = document.getElementById('notificationList');
        
        if (notifications.length > 0) {
          document.getElementById('notificationCount').classList.remove('hidden');
          document.getElementById('notificationCount').textContent = notifications.length;
          
          notificationList.innerHTML = '';
          
          notifications.forEach(notif => {
            const li = document.createElement('li');
            li.className = notif.leido ? 'notification-item' : 'notification-item unread';
            li.innerHTML = `
              <div>${notif.actividad}</div>
              <div class="notification-time">${new Date(notif.fecha).toLocaleString()}</div>
            `;
            notificationList.appendChild(li);
          });
        }
      } catch (error) {
        console.error("Error loading notifications:", error);
      }
    }
    
    // Mark notifications as read
    async function markNotificationsAsRead(userId) {
      if (!userId) return;
      
      try {
        const response = await fetch(`/marcarNotificacionesComoLeidas/${userId}`, {
          method: 'POST'
        });
        
        const data = await response.json();
        
        if (data.success) {
          document.getElementById('notificationCount').classList.add('hidden');
          document.querySelectorAll('.notification-item').forEach(item => {
            item.classList.remove('unread');
          });
          notificationPopup.classList.remove('show');
        }
      } catch (error) {
        console.error("Error marking notifications as read:", error);
      }
    }
    
    // Initialize
    document.addEventListener('DOMContentLoaded', () => {
      loadNotifications();
      setInterval(loadNotifications, 30000); // Check every 30 seconds
    });
  </script>
</body>
</html>