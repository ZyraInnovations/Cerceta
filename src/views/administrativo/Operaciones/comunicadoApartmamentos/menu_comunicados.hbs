
<style>


/* From Uiverse.io by andrew-demchenk0 */ 
.card {
  --main-color: #dedede;
  --sub-color: #ccc;
  --bg-color: #323232;
  --accent-color: #BC8D66;
  position: relative;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  width: 270px;
  padding: 25px;
  border-radius: 25px;
  display: flex;
  flex-direction: column;
  gap: 5px;
  background-color: var(--bg-color);
  transition: all 0.2s;
  cursor: pointer;
  box-shadow: 0px 0px 5px -1.5px #000;
}

.card::before {
  content: '';
  width: 99%;
  height: 99%;
  background: var(--sub-color);
  position: absolute;
  z-index: -1;
  top: 1px;
  left: 1px;
  border-radius: 25px;
  transition: all 0.3s;
}

.card__wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
}

.card__img {
  width: 100%;
}

.card__title {
  color: var(--main-color);
  font-weight: 900;
  font-size: 25px;
}

.card__subtitle {
  color: var(--sub-color);
  font-weight: 600;
  font-size: 20px;
}

.card__icon {
  width: 40px;
  height: 40px;
  transform: rotate(-45deg);
  transition: all 0.3s;
}

.card__icon svg {
  width: 100%;
  height: 100%;
}

.card__icon g {
  fill: var(--main-color);
}

.card__icon circle, polyline, line {
  stroke: var(--main-color);
}

.card:hover .card__icon {
  transform: rotate(0);
}

.card:hover .card__icon circle, .card:hover .card__icon polyline, .card:hover .card__icon line {
  stroke: var(--accent-color);
}

.card:hover .card__icon g {
  fill: var(--accent-color);
}

.card:hover {
  box-shadow: 0px 0px 20px -5px #000;
}

.card:hover::before {
  transform: rotate(10deg);
  box-shadow: 0px 0px 20px -5px #000;
}

/* remove svg from class ="card__img" and last styles below css code before use */
.st1 {
  fill: #fff
}

.st2 {
  fill: none;
  stroke: #242c88;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-miterlimit: 10
}

.st7 {
  fill: #589fff
}

.st9 {
  fill: #bc8d66
}

.st15,.st16 {
  opacity: .4;
  fill: #242c88
}

.st16 {
  opacity: .2
}

.st18 {
  fill: #ffc408
}

.st53 {
  fill: none;
  stroke: #242c88;
  stroke-width: 1.848;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-miterlimit: 10;
}


.card-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;  /* Esto asegura que las cartas se ajusten a la pantalla */
  gap: 20px;
  margin-left: 10%;
}
/* Define el color predeterminado para el SVG */
.feather {
  stroke: #1e99d3; /* Color por defecto */
}

/* Cambia el color cuando el tema oscuro está activado */
@media (prefers-color-scheme: dark) {
  .feather {
    stroke: #c92458; /* Color para el modo oscuro */
  }
}





.division {
    color: #BC8D66;
    text-align: center;
    font-size: 36px;
    margin-top: 40px;
    margin-bottom: 20px;
    position: relative;
  }

  /* Línea de separación debajo del título */
  .division::after {
    content: '';
    position: absolute;
    width: 50%;
    height: 3px;
    background-color: #BC8D66;
    bottom: -10px;
    left: 25%;
  }


body.dark-mode .division {
  color: white; /* Cambia el color de los íconos a blanco en modo oscuro */
}


</style>

<h1 class="division" ><i class="fas fa-building icon-title"></i> COMUNICADOS</h1>
<br>

<div class="card-container">


<div class="card">
<div class="card__img">
    <img src="imagenes/comunicarse.png" alt="Descripción de la imagen" width="150" height="150">
</div>

    <div class="card__subtitle">COMUNICADO GENERAL</div>
    <div class="card__wrapper">
        <div class="card__title">ENVIAR  </div>

<div class="card__icon">
    <a href="/ComunicadosGeneral" style="text-decoration: none;">
        <svg color="rgb(224, 223, 220)" style="user-select: none; width: 100%; height: 100%; display: inline-block; fill: rgb(224, 223, 220); flex-shrink: 0; cursor: auto;" viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
            <g color="rgb(224, 223, 220)">
                <circle opacity="0.2" r="96" cy="128" cx="128"></circle>
                <circle stroke-width="16" stroke-miterlimit="10" stroke="rgb(224, 223, 220)" fill="none" r="96" cy="128" cx="128"></circle>
                <polyline stroke-width="16" stroke-linejoin="round" stroke-linecap="round" stroke="rgb(224, 223, 220)" fill="none" points="134.1 161.9 168 128 134.1 94.1"></polyline>
                <line stroke-width="16" stroke-linejoin="round" stroke-linecap="round" stroke="rgb(224, 223, 220)" fill="none" y2="128" x2="168" y1="128" x1="88"></line>
            </g>
        </svg>
    </a>
</div>
</div>
</div>







<div class="card">
<div class="card__img">
    <img src="imagenes/conversacion.png" alt="Descripción de la imagen" width="150" height="150">
</div>

    <div class="card__subtitle">COMUNICADO INDIVIDUAL</div>
    <div class="card__wrapper">
        <div class="card__title">ENVIAR  </div>

<div class="card__icon">
    <a href="/envio_apartamentos" style="text-decoration: none;">
        <svg color="rgb(224, 223, 220)" style="user-select: none; width: 100%; height: 100%; display: inline-block; fill: rgb(224, 223, 220); flex-shrink: 0; cursor: auto;" viewBox="0 0 256 256" xmlns="http://www.w3.org/2000/svg">
            <g color="rgb(224, 223, 220)">
                <circle opacity="0.2" r="96" cy="128" cx="128"></circle>
                <circle stroke-width="16" stroke-miterlimit="10" stroke="rgb(224, 223, 220)" fill="none" r="96" cy="128" cx="128"></circle>
                <polyline stroke-width="16" stroke-linejoin="round" stroke-linecap="round" stroke="rgb(224, 223, 220)" fill="none" points="134.1 161.9 168 128 134.1 94.1"></polyline>
                <line stroke-width="16" stroke-linejoin="round" stroke-linecap="round" stroke="rgb(224, 223, 220)" fill="none" y2="128" x2="168" y1="128" x1="88"></line>
            </g>
        </svg>
    </a>
</div>
</div>
</div>



</div>













    <script>
  document.addEventListener("DOMContentLoaded", () => {
    // Seleccionar elementos del DOM
    const hamburgerMenu = document.getElementById("hamburger-menu");
    const sidebar = document.getElementById("sidebar");

    if (hamburgerMenu && sidebar) {
      // Agregar el evento de clic al ícono de hamburguesa
      hamburgerMenu.addEventListener("click", () => {
        console.log("Hamburguesa clickeada");
        sidebar.classList.toggle("open"); // Alternar clase 'open'
      });
    } else {
      console.error("No se encontró el menú hamburguesa o el sidebar.");
    }
  });
</script>

